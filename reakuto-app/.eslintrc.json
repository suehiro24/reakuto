{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb",
    "airbnb/hooks",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "project": "./tsconfig.eslint.json",
    "sourceType": "module",
    "tsconfigRootDir": "."
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "jsx-a11y",
    "prefer-arrow",
    "react",
    "react-hooks"
  ],
  "root": true,

  "settings": {
    // Add baseurl in tsconfig.json to eslint-import-resolver-node
    "import/resolver": {
      "node": {
        "paths": ["src"]
      }
    }
  },

  "overrides": [
    {
      // No need to check the type of props in .tsx files
      "files": ["*.tsx"],
      "rules": {
        "react/prop-types": "off"
      }
    }
  ],

  "rules": {
    // For Effect Hooks (Allow void as statement only)
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    // Allow no blank line only after single line members
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    // Allow no-unused-vars only the variable is named "_"
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "argsIgnorePattern": "_",
        "ignoreRestSiblings": false,
        "varsIgnorePattern": "_"
      }
    ],
    // For TS-compiler
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    // Allow JSX in .tsx files
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".jsx", ".tsx"]
      }
    ],
    // Allow explicitSpread only
    "react/jsx-props-no-spreading": [
      "error",
      {
        "html": "enforce",
        "custom": "enforce",
        "explicitSpread": "ignore"
      }
    ],
    // With the new jsx transform, there is No need to import the react library in components.
    // see: https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html
    "react/react-in-jsx-scope": "off",
    // Allow only arrow-function in methods
    "prefer-arrow/prefer-arrow-functions": [
      "error",
      {
        "disallowPrototype": true,
        "singleReturnOnly": false,
        "classPropertiesAllowed": false
      }
    ],
    // Allow only arrow-function in components
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function"
      }
    ]
  }
}
